version: '3'

services:
    databaseapi:
        build: microservices/database_api_image
        image: 127.0.0.1:5050/database_api
        ports:
            - "5000:5000"
        depends_on:
            - databaseprimary
            - images
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
            placement:
                constraints:
                    - "node.role==worker"
        volumes:
            - 'database_api:/database_api'
        networks:
            - database
        environment:
            - DATABASE_URL=mongodb://root:owl45#21@databaseprimary,databasesecondary/?replicaSet=replica_set
            - DATABASE_PORT=27017 

    databaseprimary:
        image: 'bitnami/mongodb:3.6.17-ol-7-r26'
        ports:
            - "27017:27017"
        environment:
            - MONGODB_ADVERTISED_HOSTNAME=databaseprimary
            - MONGODB_REPLICA_SET_MODE=primary
            - MONGODB_REPLICA_SET_KEY=replicasetkey
            - MONGODB_ROOT_PASSWORD=owl45#21
            - MONGODB_REPLICA_SET_NAME=replica_set    
        volumes:
            - 'database:/bitnami'
        networks:
            - database
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
            placement:
                constraints:
                    - "node.role==manager"

    databasesecondary:
        image: 'bitnami/mongodb:3.6.17-ol-7-r26'
        depends_on:
            - databaseprimary
        environment:
            - MONGODB_ADVERTISED_HOSTNAME=databasesecondary
            - MONGODB_REPLICA_SET_MODE=secondary
            - MONGODB_PRIMARY_HOST=databaseprimary
            - MONGODB_PRIMARY_PORT_NUMBER=27017
            - MONGODB_REPLICA_SET_KEY=replicasetkey
            - MONGODB_PRIMARY_ROOT_PASSWORD=owl45#21
            - MONGODB_REPLICA_SET_NAME=replica_set
        networks:
            - database
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
            placement:
                constraints:
                    - "node.role==worker"

    databasearbiter:
        image: 'bitnami/mongodb:3.6.17-ol-7-r26'
        depends_on:
         - databaseprimary
        environment:
            - MONGODB_ADVERTISED_HOSTNAME=databasearbiter
            - MONGODB_REPLICA_SET_MODE=arbiter
            - MONGODB_PRIMARY_HOST=databaseprimary
            - MONGODB_PRIMARY_PORT_NUMBER=27017
            - MONGODB_REPLICA_SET_KEY=replicasetkey
            - MONGODB_PRIMARY_ROOT_PASSWORD=owl45#21
            - MONGODB_REPLICA_SET_NAME=replica_set
        networks:
            - database
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
            placement:
                constraints:
                    - "node.role==worker"

    images:
        image: registry:2.7.1
        ports:
            - "5050:5000"
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
            placement:
                constraints:
                    - "node.role==manager"
        networks:
            - database
        volumes:
            - images:/var/lib/registry

    visualizer:
        image: dockersamples/visualizer:latest
        volumes:
        - "/var/run/docker.sock:/var/run/docker.sock"
        ports:
        - "80:8080"
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
            placement:
                constraints:
                    - "node.role==manager"


    sparkworker:
        image: 127.0.0.1:5050/spark
        entrypoint: dockerize -wait tcp://sparkmaster:7077 -timeout 240s /sbin/my_init
        ports:
            - 8081:8081
            - 41352:41352
        links:
            - sparkmaster
        environment:
            - SPARK_MASTER=sparkmaster
            - SPARK_ROLE=slave
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
            placement:
                constraints:
                    - "node.role==worker"
        networks:
            - spark
            - database


    modelbuilder:
        build: microservices/model_builder_image
        image: 127.0.0.1:5050/model_builder
        ports:
            - "5002:5002"
            - 41100:41100
        extra_hosts:
            - "modelbuilder:0.0.0.0"
        depends_on:
            - databaseprimary
            - images
            - sparkmaster
            - sparkworker
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
            placement:
                constraints:
                    - "node.role==worker"
        networks:
            - database
            - spark
        environment:
            - DATABASE_URL=mongodb://root:owl45#21@databaseprimary,databasesecondary
            - DATABASE_PORT=27017
            - DATABASE_REPLICA_SET=replica_set
            - DATABASE_NAME=database

    datatypehandler:
        build: microservices/data_type_handler_image
        image: 127.0.0.1:5050/data_type_handler
        ports:
            - "5003:5003"
        depends_on:
            - databaseprimary
            - images
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
            placement:
                constraints:
                    - "node.role==worker"
        networks:
            - database
        environment:
            - DATABASE_URL=mongodb://root:owl45#21@databaseprimary,databasesecondary
            - DATABASE_PORT=27017
            - DATABASE_REPLICA_SET=replica_set
            - DATABASE_NAME=database
    




    pca:
        build: microservices/pca_image
        image: 127.0.0.1:5050/pca
        ports:
            - "5006:5006"
            - 41300:41300
        extra_hosts:
            - "pca:0.0.0.0"
        depends_on:
            - databaseprimary
            - images
            - sparkmaster
            - sparkworker
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
            placement:
                constraints:
                    - "node.role==manager"
        volumes:
            - 'pca:/images'
        networks:
            - database
            - spark
        environment:
            - DATABASE_URL=mongodb://root:owl45#21@databaseprimary,databasesecondary
            - DATABASE_PORT=27017
            - DATABASE_REPLICA_SET=replica_set
            - DATABASE_NAME=database

networks:
    database:
    spark:

volumes:
    images:
    database:
    database_api:
    pca:
